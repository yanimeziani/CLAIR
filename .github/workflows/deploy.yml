name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build application
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        NEXTAUTH_SECRET: test-secret-for-build
        NEXTAUTH_URL: http://localhost:3000
      run: npm run build

  deploy:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Clean workspace
      run: |
        sudo rm -rf ${{ github.workspace }}/.git
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.[!.]*
    
    - uses: actions/checkout@v4
      with:
        clean: true
    
    - name: Create environment file
      run: |
        cat > .env.production << EOF
        NODE_ENV=production
        MONGODB_URI=mongodb://admin:securepassword@mongodb:27017/irielle?authSource=admin
        AI_BACKEND_URL=http://ai-backend:8000
        NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL=https://dev.meziani.org
        EOF
    
    - name: Stop existing containers
      run: docker compose down || true
    
    - name: Remove old images
      run: docker system prune -f || true
    
    - name: Start services without SSL first
      run: |
        # Use init config for certificate generation
        cp nginx/conf.d/irielle-init.conf nginx/conf.d/irielle.conf.bak
        mv nginx/conf.d/irielle.conf nginx/conf.d/irielle-ssl.conf
        mv nginx/conf.d/irielle-init.conf nginx/conf.d/irielle.conf
        docker compose up -d --build mongodb chromadb ai-backend frontend nginx
    
    - name: Wait for services and get SSL certificate
      run: |
        echo "Waiting for services to start..."
        sleep 30
        echo "Requesting SSL certificate..."
        docker compose run --rm certbot || echo "Certificate already exists or failed"
        sleep 10
    
    - name: Switch to SSL configuration
      run: |
        # Check if certificate exists and switch to SSL config
        if docker exec irielle-nginx test -f /etc/letsencrypt/live/dev.meziani.org/fullchain.pem; then
          echo "Certificate found, switching to SSL configuration..."
          mv nginx/conf.d/irielle.conf nginx/conf.d/irielle-init.conf
          mv nginx/conf.d/irielle-ssl.conf nginx/conf.d/irielle.conf
          docker compose restart nginx
        else
          echo "Certificate not found, continuing with HTTP only..."
        fi
    
    - name: Start all services
      run: docker compose up -d
    
    - name: Verify deployment
      run: |
        echo "Waiting for final startup..."
        sleep 20
        docker compose logs --tail=20
        curl -f http://localhost || curl -f https://dev.meziani.org || exit 1
        echo "Deployment successful!"