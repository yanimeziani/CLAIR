name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build application
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        NEXTAUTH_SECRET: test-secret-for-build
        NEXTAUTH_URL: http://localhost:3000
      run: npm run build

  deploy:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Create environment file
      run: |
        cat > .env.production << EOF
        NODE_ENV=production
        MONGODB_URI=mongodb://admin:securepassword@mongodb:27017/irielle?authSource=admin
        AI_BACKEND_URL=http://ai-backend:8000
        NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
        EOF
    
    - name: Stop existing containers
      run: docker-compose down || true
    
    - name: Remove old images
      run: docker system prune -f || true
    
    - name: Start services with Docker Compose
      run: docker-compose up -d --build
    
    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 30
        docker-compose logs --tail=20
    
    - name: Verify deployment
      run: |
        curl -f http://localhost:3000 || exit 1
        echo "Deployment successful!"